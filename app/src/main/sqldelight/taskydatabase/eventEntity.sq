CREATE TABLE eventEntity (
    id TEXT NOT NULL PRIMARY KEY,
    isUserEventCreator INTEGER NOT NULL CHECK (isUserEventCreator IN (0,1)),
    title TEXT NOT NULL,
    description TEXT NOT NULL,
    fromTime INTEGER NOT NULL,
    toTime INTEGER NOT NULL,
    host TEXT NOT NULL,
    remindAt INTEGER NOT NULL,
    shouldBeDeleted INTEGER NOT NULL CHECK (shouldBeDeleted IN (0, 1)),
    isAddedOnRemote INTEGER NOT NULL CHECK (isAddedOnRemote IN (0, 1)),
    shouldBeUpdated INTEGER NOT NULL CHECK (shouldBeUpdated IN (0, 1))
);

insertEvent:
INSERT OR REPLACE INTO eventEntity VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);

getEvent:
SELECT * FROM eventEntity WHERE id = ?;

listEvents:
SELECT * FROM eventEntity WHERE shouldBeDeleted = 0;

updateEvent:
UPDATE eventEntity SET isUserEventCreator = ?, title = ?, description = ?, fromTime = ?, toTime = ?, host = ?, remindAt = ?,
shouldBeDeleted = ?, isAddedOnRemote = ?, shouldBeUpdated = ? WHERE id = ?;

markEventForDelete:
UPDATE eventEntity SET shouldBeDeleted = 1 WHERE id = ?;

deleteEvent:
DELETE FROM eventEntity WHERE id = ?;

listEventsForDelete:
SELECT id FROM eventEntity WHERE shouldBeDeleted = 1;

listEventsForCreate:
SELECT * FROM eventEntity WHERE isAddedOnRemote = 0;

listEventsForUpdate:
SELECT * FROM eventEntity WHERE shouldBeUpdated = 1 AND isAddedOnRemote = 1;

markEventAsAddedOnRemote:
UPDATE eventEntity SET isAddedOnRemote = 1 WHERE id = ?;

markEventAsUpdated:
UPDATE eventEntity SET shouldBeUpdated = 0 WHERE id = ?;

nuke:
DELETE FROM eventEntity;

